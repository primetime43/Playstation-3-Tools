using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;
using System.IO;

namespace Call_of_Duty_World_at_War_Tool
{
    public partial class Mods : Form
    {
        public Mods()
        {
            InitializeComponent();
        }

        public uint Sv_GameSendSeverCommand = 0x361410;

        public void doClanTag()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v clanName {43}");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doAmmo()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_sustainAmmo 1");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Unlimited Ammo ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doAmmoOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_sustainAmmo 0");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Unlimited Ammo ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doLaser()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_laserForceOn 1");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Laser ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doLaserOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_laserForceOn 0");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Laser ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v sv_cheats 1");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Force Host ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost1()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_iamhost 1");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost2()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v ui_hostOptionsEnabled 1");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost3()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_connectToOthers 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost4()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_hostmigration 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost5()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_connectTimeout 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHostOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v sv_cheats 0");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Force Host ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost1Off()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_iamhost 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost2Off()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v ui_hostOptionsEnabled 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost3Off()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_connectToOthers 1");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost4Off()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_hostmigration 1");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doForceHost5Off()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v party_connectTimeout 1");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doSuperMelee()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_meleeRange 999"); 
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Super Melee ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doSuperMelee1()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_meleeHeight 999");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doSuperMelee2()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_meleeWidth 999");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doSuperMeleeOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_meleeRange 100");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Super Melee ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doSuperMeleeOff1()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_meleeHeight 50");
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doSuperMeleeOff2()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v player_meleeWidth 50");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doProMod()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_fov 95");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Pro Mod ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doProMod1()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_gun_x 4");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doProModOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_fov 65");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Pro Mod ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doProModOff1()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_gun_x 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doThirdPerson()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_thirdPerson 1");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Third Person ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doThirdPersonOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v cg_thirdPerson 0");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Third Person ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWall()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_znear_depthhack 2");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Wall Hack ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWall1()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_znear 57");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWall2()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_zFeather 4");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWall3()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_zfar 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWallOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_znear_depthhack 0.1");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6Wall Hack ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWallOff1()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_znear 4");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWallOff2()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_zFeather 1");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doWallOff3()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v r_zfar 0");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doUAV()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v g_compassshowenemies 1");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6UAV ^2On\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }

        public void doUAVOff()
        {
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x02, 0x00, 0x30, 0xA5, 0x50, 0x00, 0x4B, 0xFB, 0x85, 0x2D, 0x4B, 0xFF, 0xFA, 0x38, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00 };
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0xD7, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x1E, 0x80, 0x5C, 0x3B, 0x40, 0x00, 0x00, 0x54, 0xCA, 0x30, 0x32, 0xC0, 0x3E, 0x80, 0x78, 0x54, 0xDD, 0x18, 0x38, 0x7C, 0x7D, 0x52, 0x14, 0x7D, 0x03, 0xC2, 0x14, 0x79, 0x03, 0x00, 0x20, 0x4B, 0xFD, 0x7E, 0xAD, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x17, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x80, 0xF7, 0x00, 0x00, 0xD8, 0x01, 0x04, 0xA0, 0x7C, 0x79, 0x1B, 0x78, 0x54, 0xFC, 0x30, 0x32, 0xE8, 0x81, 0x04, 0xA0, 0x54, 0xEC, 0x18, 0x38, 0x80, 0x7E, 0x83, 0x28, 0x7D, 0x6C, 0xE2, 0x14, 0x7F, 0x6B, 0xC2, 0x14, 0x48, 0x01, 0xED, 0x81, 0x60, 0x00, 0x00, 0x00, 0x38, 0x00, 0xFF, 0xFF, 0x82, 0xDE, 0x80, 0x64, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x3E, 0x82, 0xF8, 0x7B, 0x63, 0x00, 0x20, 0xC0, 0x5E, 0x82, 0x88, 0x78, 0x05, 0x00, 0x60, 0xC0, 0x7E, 0x80, 0x78, 0x7B, 0x26, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xFA, 0xC1, 0x00, 0x78, 0xFB, 0x41, 0x00, 0x80, 0x4B, 0xFD, 0x82, 0x25, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xF9, 0x34, 0x81, 0x3E, 0x80, 0x58, 0x39, 0x61, 0x00, 0xA0 };
            byte[] ON = new byte[] { 0x41 };
            byte[] OFF = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes("v g_compassshowenemies 0");
            WaWStats.RPC.Call(Sv_GameSendSeverCommand, 0, 1, "c \"^6UAV ^1Off\"");
            PS3Util.PS3.SetMemory(0x2005000, sv);
            PS3Util.PS3.SetMemory(0x3A88A4, ON);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCON);
            System.Threading.Thread.Sleep(15);
            PS3Util.PS3.SetMemory(0x3A88A4, OFF);
            PS3Util.PS3.SetMemory(0x3A8ED4, RPCOFF);
            PS3Util.PS3.SetMemory(0x2005000, DFT);
        }
///////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
/// /////////////////////////////////////////////////////////////////////////////////

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox1.Checked)
            {
                doLaserOff();
            }
            else
            {
                doLaser();
                doClanTag();
            }
        }

        private void checkBox2_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox2.Checked)
            {
                doForceHostOff();
                doForceHost1Off();
                doForceHost2Off();
                doForceHost3Off();
                doForceHost4Off();
                doForceHost5Off();
            }
            else
            {
                doForceHost();
                doForceHost1();
                doForceHost2();
                doForceHost3();
                doForceHost4();
                doForceHost5();
                doClanTag();
            }
        }

        private void checkBox3_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox3.Checked)
            {
                doSuperMeleeOff();
                doSuperMeleeOff1();
                doSuperMeleeOff2();
            }
            else
            {
                doSuperMelee();
                doSuperMelee1();
                doSuperMelee2();
                doClanTag();
            }
        }

        private void checkBox4_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox4.Checked)
            {
                doAmmoOff();
            }
            else
            {
                doAmmo();
                doClanTag();
            }
        }

        private void checkBox5_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox5.Checked)
            {
                doProModOff();
                doProModOff1();
            }
            else
            {
                doProMod();
                doProMod1();
                doClanTag();
            }
        }

        private void checkBox7_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox7.Checked)
            {
                doThirdPersonOff();
            }
            else
            {
                doThirdPerson();
                doClanTag();
            }
        }

        private void checkBox8_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox8.Checked)
            {
                doWallOff();
                doWallOff1();
                doWallOff2();
                doWallOff3();
            }
            else
            {
                doWall();
                doWall1();
                doWall2();
                doWall3();
                doClanTag();
            }
        }

        private void checkBox6_CheckedChanged(object sender, EventArgs e)
        {
            if (!checkBox6.Checked)
            {
                doUAVOff();
            }
            else
            {
                doUAV();
                doClanTag();
            }
        }
    }
}